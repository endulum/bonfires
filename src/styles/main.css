body, html, #root {
  border: none;
  width: 100%;
  height: 100%;
}

body {
  background: rgb(var(--darkest));
  color: rgb(var(--white));
}

#root {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

header, main {
  width: 100%;
  padding: 1rem;
}

header {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  background-color: rgb(var(--darker));
  border-bottom: 1px solid rgb(var(--dark));
}

main {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

form {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  gap: 1.25rem;
  label {
    display: flex;
    flex-direction: column;
    width: 100%;
    gap: 0.25rem;
  }
  .invalid input {
    border-bottom: 1px solid rgb(var(--red));
  }
  input {
    background-color: rgba(var(--darkest), 0.3);
    border-bottom: 1px solid rgb(var(--white));
  }
  p {
    padding: 0.5rem 0.75rem;
  }
}

button {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.75rem;
  appearance: none;
  padding: 0.5rem 1rem;
  font-size: 1rem;
  cursor: pointer;
  background-color: transparent;
  border: 1px solid rgb(var(--dark));
  color: rgb(var(--white));
  &:hover, &.active {
    border: 1px solid rgb(var(--white));
    svg {
      fill: rgb(var(--white));
    }
  }
  &:disabled {
    opacity: 0.5;
  }
  span {
    min-width: max-content;
  }
  svg {
    fill: rgb(var(--dark));
    width: 1.25rem;
    min-width: 1.25rem;
  }
}

input {
  color: rgb(var(--white));
}

input, textarea {
  appearance: none;
  border: none;
  padding: 0.5rem;
}

a {
  color: rgb(var(--white));
  font-weight: bold;
}

small {
  font-size: 0.875rem;
}

svg.mini {
  height: 1rem;
}

svg.inline {
  display: inline-block;
  vertical-align: text-top;
  margin-right: 0.5rem;
}

.auth-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  width: calc(100% - 20px);
  max-width: 400px;
}

.auth-form-outer {
  position: relative;
  width: 100%;
  padding: 5px;
  &::before, &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to top left, rgb(var(--yellow)), rgb(var(--pale)), rgb(var(--blue))
    );
  }
  &::after {
    filter: blur(30px);
    opacity: 0.5;
  }
}

.auth-form {
  position: relative;
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
  padding: 1rem;
  background-color: rgba(var(--darkest), 0.7);
  button {
    color: rgb(var(--white));
    background-color: rgba(var(--darkest), 0.25);
    border: 1px solid rgb(var(--white));
    &:hover {
      box-shadow: 0px 0px 10px rgb(var(--yellow));
    }
  }
  a:hover {
    text-decoration: underline;
  }
}

.form-error {
  background-color: rgba(var(--red), 0.3);
  svg {
    fill: rgb(var(--white));
  }
}

.form-info { 
  background-color: rgba(var(--purple), 0.3);
}


.dropdown-menu-wrapper {
  position: relative;
  height: 100%;
  min-height: 3rem;
  button {
    height: 100%;
  }
}

.dropdown-menu {
  position: absolute;
  min-width: 100%;
  right: 0;
  top: 3.5rem;
  padding: 0.75rem;
  display: flex;
  flex-direction: column;
  gap: 0.125rem;
  background-color: rgb(var(--darker));
  border: 1px solid rgb(var(--dark));
  box-shadow: rgba(0, 0, 0, 0.5) 0px 5px 15px;
  z-index: 9;
  > * {
    min-width: max-content;
    width: 100%;
  }
  button {
    border: none;
    padding: 0.5rem;
    display: flex;
    gap: 1rem;
    justify-content: space-between;
    &:hover {
      background-color: rgb(var(--dark));
    }
    span {
      min-width: min-content;
    }
  }
}

.modal-overlay {
  position: fixed;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  padding: 1.5rem;
  display: flex;
  justify-content: center;
  align-items: start;
  background-color: rgba(var(--darkest), 0.75);
}

.modal-content {
  position: relative;
  padding: 1rem;
  background-color: rgb(var(--darker));
  border: 1px solid rgb(var(--dark));
  width: calc(100% - 20px);
  max-width: 400px;
  margin-bottom: 3rem;
  h3, p {
    width: 100%;
  }
  > button {
    position: absolute;
    bottom: -3.5rem;
    left: 0;
    right: 0;
    justify-content: center;
    background-color: rgb(var(--darker));
  }
}

.dropdown-menu, .modal-content, .modal-content > button {
  box-shadow: rgba(0, 0, 0, 0.5) 0px 5px 15px;
}

.ReactModalPortal, [data-react-modal-body-trap] { border: none }

.header-bar {
  display: flex;
  flex-direction: row;
  gap: 1rem;
  h2 {
    flex-grow: 1;
    border-bottom: 1px solid rgb(var(--dark));
  }
  > button, .dropdown-menu-wrapper > button {
    min-height: 3rem;
    height: 100%;
    background-color: rgb(var(--darker));
  }
}

.channels {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 15px;
}

.channel {
  text-decoration: none;
  padding: 1rem;
  display: flex;
  flex-direction: row;
  gap: 1rem;
  align-items: center;
  border: 1px solid rgb(var(--dark));
  background-color: rgb(var(--darker));
  svg {
    fill: rgb(var(--white));
  }
  .fire {
    fill: rgb(var(--dark));
    width: 2.5rem;
    min-width: 2.5rem;
  }
  &:hover {
    border-color: rgb(var(--white));
    .fire {
      fill: rgb(var(--white))
    }
  }
}

.channel-details {
  flex-grow: 1;
  max-width: calc(100% - 3.5rem);
}

.channel-status {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
}

.channel-displayname, .channel-title, .header-bar h2, header button {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;  
}

.messages {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  overflow-y: auto;
  height: 0px;
  padding: 1rem;
  border: 1px solid rgb(var(--dark));
  background-color: rgb(var(--darker));
}

.message {
  display: flex;
  flex-direction: row;
  max-width: 100%;
  hyphens: auto;
}

.message-timestamp {
  margin-top: 0.125rem;
  margin-right: 0.5rem;
  min-width: max-content;
  opacity: 0.75;
}

.message-user {
  font-weight: bold;
  margin-right: 0.5rem;
  color: rgb(var(--blue));
  svg {
    margin-left: 0.5rem;
    margin-right: 0rem;
    fill: rgb(var(--blue));
  }
  &.admin {
    color: rgb(var(--yellow));
    svg { fill: rgb(var(--yellow)) }
  }
  &.not-in-channel {
    color: rgb(var(--white));
    svg { fill: rgb(var(--white)) }
  }
}

.compose {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.compose-row {
  display: flex;
  flex-direction: row;
  gap: 1rem;
  align-items: end;
  height: calc(2.5rem + 2px);
  textarea {
    height: 100%;
    flex-grow: 1;
    border: 1px solid rgb(var(--dark));
    background-color: rgb(var(--darker));
    color: rgb(var(--white));
    &::placeholder {
      color: rgb(var(--dark))
    } 
  }
  button {
    background-color: rgb(var(--darker));
  }
}

.compose-error svg {
  fill: rgb(var(--red));
}

a:has(.logo) { 
  text-decoration: none; 
}

.logo {
  display: flex;
  flex-direction: row;
  gap: 1rem;
  align-items: center;
  font-size: 3rem;
  svg {
    width: 3rem;
    fill: rgb(var(--yellow));
  }
  &.smaller {
    gap: 0.5rem;
    font-size: 2rem;
    svg {
      width: 2rem;
      fill: rgb(var(--dark));
    }
    &:hover {
      cursor: pointer;
      svg {
        fill: rgb(var(--yellow))
      }
    }
  }
}

.react-tooltip.tooltip {
  background-color: rgb(var(--white));
  color: rgb(var(--darker));
  font-weight: normal;
}

@media screen and (max-width: 500px) {
  header button b, .header-bar .dropdown-menu-wrapper > button > span {
    display: none;
  }
}