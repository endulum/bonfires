@font-face {
  font-family: "Roboto Condensed";
  src: url(./fonts/RobotoCondensed-VariableFont_wght.ttf);
}

@font-face {
  font-family: "Roboto Condensed Italic";
  src: url(./fonts/RobotoCondensed-Italic-VariableFont_wght.ttf);
}

:root {
  /* rose pine */
  --white1: #f4ede8;
  --white2: #dfdad9;
  --white3: #cecacd;
  --black3: #6e6a86;
  --black2: #393552;
  --black1: #2a273f;
  --neutral: #c4a7e7;
  --warning: #eb6f92;
  --success: #9ccfd8;
  --info: var(--neutral);

  --fontstack: Helvetica, Arial, sans-serif;
  --radius: 3px;
}

[data-theme="light"] {
  --fg: var(--black2);
  --bg: var(--white1);
  --bg2: var(--white2);
  --border: var(--white3);
  --lumi: -0.05;
  --alert-txt-lumi: -0.125;
}

[data-theme="dark"] {
  --fg: var(--white1);
  --bg: var(--black2);
  --bg2: var(--black1);
  --border: var(--black3);
  --lumi: 0.05;
  --alert-txt-lumi: 0.125;
}

body {
  font-family: "Roboto Condensed", var(--fontstack);
  font-weight: 400;
  color: var(--fg);
  background-color: var(--bg2);
}

i {
  font-style: normal !important;
  font-family: "Roboto Condensed Italic", var(--fontstack);
}

/**** coloring ****/

.neutral {
  --color: var(--neutral);
}
.warning {
  --color: var(--warning);
}
.success {
  --color: var(--success);
}
.info {
  --color: var(--info);
}

/**** reusable components ****/

/* basic elements */

small {
  line-height: 0.75rem;
}

a {
  font-weight: bold;
  color: var(--accent);
}

textarea {
  font-family: monospace;
}

hr {
  height: 1px;
  width: 100%;
  border: none;
  border-top: 1px solid var(--border);
}

/* buttons */

.button {
  font-size: 1rem;
  line-height: 1.25rem;
  font-weight: bold;
  text-decoration: none;
  border-radius: var(--radius);
  padding: 0.5rem 1rem;
  transition: color 0.25s ease, background-color 0.25s ease, border 0.25s ease;
  justify-content: center;

  span,
  small {
    min-width: max-content;
    white-space: nowrap;
  }

  svg {
    width: 1.25rem;
    height: 1.25rem;
    transition: color 0.25s ease;
  }

  &[disabled] {
    opacity: 0.5;
  }

  &:not([disabled]):hover {
    cursor: pointer;
  }

  &:has(svg) {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0.5rem;
  }

  &:not(:has(span)) {
    padding: 0.5rem;
  }

  &:has(small) {
    gap: 0.25rem;
    line-height: 0.5rem;
    svg {
      width: 1rem;
      height: 1rem;
    }
  }

  &.solid {
    color: var(--white1);
    background-color: oklch(from var(--color) calc(l - 0.125) c h / 1);
    &:not([disabled]):hover {
      background-color: oklch(from var(--color) calc(l - 0.05) c h / 1);
    }
  }

  &.outlined {
    color: var(--fg);
    background-color: transparent;
    border: 1px solid oklch(from var(--color) l c h / 0.5);
    svg {
      color: oklch(from var(--color) l c h / 0.5);
    }
    &:not([disabled]):hover {
      border: 1px solid var(--color);
      svg {
        color: var(--color);
      }
    }
  }

  &.plain {
    color: var(--fg);
    background-color: transparent;
    svg {
      color: var(--color);
    }
    &:not([disabled]):hover {
      background-color: oklch(from var(--bg) calc(l + var(--lumi)) c h);
      svg {
        color: var(--color);
      }
    }
  }
}

/* alerts */

.alert {
  padding: 0.5rem 0.75rem;
  border-radius: var(--radius);
  background-color: oklch(from var(--color) calc(l + var(--lumi)) c h / 0.125);
  color: oklch(from var(--color) calc(l + var(--alert-txt-lumi)) c h);
  a {
    color: oklch(from var(--color) calc(l + var(--alert-txt-lumi)) c h);
  }
  p {
    flex-grow: 1;
  }
  svg {
    flex-shrink: 0;
  }
}

/* loading spacers */

.spacer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  width: 100%;
  height: 100%;
  padding: 1rem 0;
  svg {
    width: 2rem;
    height: 2rem;
  }
  p {
    text-align: center;
  }
}

#root > .spacer {
  background-color: var(--accent1);
  color: var(--fg);
  height: 100vh;
  svg {
    color: var(--accent2);
  }
}

.spin {
  animation: spin 1s infinite linear;
}

@keyframes spin {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

/* inputs and forms */

input:not([type="checkbox"]),
select,
textarea {
  color: var(--fg);
  width: 100%;
  padding: 0.3755rem 0.625rem;
  border: 1px solid var(--border);
  border-radius: var(--radius);
  background-color: var(--bg);
  &:focus,
  &:focus-visible {
    outline: 2px solid var(--neutral);
    outline-offset: -1px;
  }
}

label {
  span {
    font-weight: bold;
    min-width: max-content;
    flex-shrink: 0;
  }
}

.form {
  button[type="submit"] {
    align-self: end;
  }
}

.form-label {
  &:has(.form-error) {
    input,
    select,
    textarea {
      border: 1px solid var(--warning);
    }
  }
}

/* input checklists */

.form-input-checklist {
  list-style: none;
  font-size: 0.875rem;
  li {
    padding: 0.125rem 0;
    line-height: 1rem;
    &.good svg {
      color: var(--success);
    }
    &.missing svg {
      color: var(--warning);
    }
  }
}

/**** unqiue components ****/

.auth-main {
  background-color: var(--bg);
  border-radius: var(--radius);
  border: 1px double var(--border);
  padding: 1.25rem;
  width: 100%;
  max-width: 400px;
}

main {
  flex-grow: 1;
  padding: 0 1rem;
  overflow-y: auto;
}

.body {
  height: 100%;
  outline: 1px solid red;
  outline-offset: -1px;
  margin: auto;
  width: 100%;
  max-width: 800px;
}
