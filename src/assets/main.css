body, html, #root {
  border: none;
  width: 100%;
  height: 100%;
}

body {
  background: rgb(var(--darkest));
  color: rgb(var(--white));
  overflow: hidden;
}

#root {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

header, main {
  width: 100%;
  padding: 1rem;
}

header {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  background-color: rgb(var(--darker));
  border-bottom: 1px solid rgb(var(--dark));
}

main {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  height: 0;
}

button, input, textarea {
  appearance: none;
  border: none;
  background-color: transparent;
}

button {
  appearance: none;
  border: none;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.75rem;
  padding: 0.5rem 1rem;
  font-size: 1rem;
  cursor: pointer;
  &:disabled {
    pointer-events: none;
    opacity: 0.5;
  }
}

.button {
  border: 1px solid rgb(var(--dark));
  color: rgb(var(--white));
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;  
  display: flex;
  flex-direction: row;
  align-items: center;
  &:hover, &.active {
    border: 1px solid rgb(var(--white));
    .button-svg {
      fill: rgb(var(--white));
    }
  }
}

.button-svg {
  fill: rgb(var(--dark));
  width: 1.375rem;
  min-width: 1.375rem;
}

.inline-svg {
  height: 1rem;
  display: inline-block;
  vertical-align: text-top;
  margin-right: 0.5rem;
  fill: rgb(var(--white));
}

input, textarea {
  color: rgb(var(--white));
  padding: 0.5rem;
}

small {
  font-size: 0.875rem;
}

span {
  min-width: max-content;
}

a {
  color: rgb(var(--white));
}

.text-link {
  color: rgb(var(--white));
}

.text-paragraph + .text-paragraph {
  margin-top: 0.5rem;
}

p.info {
  padding: 0.5rem 0.75rem;
  width: 100%;
  &.error {
    background-color: rgba(var(--red), 0.3);
  }
  &.neutral {
    background-color: rgba(var(--purple), 0.3);
  }
  &.success {
    background-color: rgba(var(--blue), 0.3);
  }
  &.warning {
    background-color: rgba(var(--yellow), 0.3);
  }
}

.expand {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
  justify-content: center;
}

/* spinner */

.loading-spinner {
  width: 3.5rem;
  height: 3.5rem;
  border: 5px solid rgb(var(--darker));
  border-bottom-color: rgb(var(--yellow));
  border-radius: 50%;
  animation: spin 1s linear infinite;
  display: flex;
  justify-content: center;
  align-items: center;
}

.loading-logo-svg {
  width: 1.25rem;
  fill: rgb(var(--yellow));
  animation: no-spin 1s linear infinite;
}

@keyframes spin {
  0% {
      transform: rotate(0deg);
  }
  100% {
      transform: rotate(360deg);
  }
} 

@keyframes no-spin {
  0% {
    transform: rotate(360deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

.loading-error-svg {
  width: 3rem;
  fill: rgb(var(--red));
}

/* auth route card */

.auth {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  width: calc(100% - 2rem);
  max-width: 400px;
}

.auth-body {
  position: relative;
  width: 100%;
  padding: 5px;
  &::before, &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to top left, rgb(var(--yellow)), rgb(var(--pale)), rgb(var(--blue))
    );
  }
  &::after {
    filter: blur(30px);
    opacity: 0.5;
  }
}

.auth-body-inner {
  position: relative;
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
  padding: 1rem;
  background-color: rgba(var(--darkest), 0.7);
}

.auth-submit {
  color: rgb(var(--white));
  background-color: rgba(var(--darkest), 0.25);
  border: 1px solid rgb(var(--white));
  &:hover {
    box-shadow: 0px 0px 10px rgb(var(--yellow));
  }
}

/* vertical API forms */

.form {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  gap: 1.25rem;
}

label.form-label {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: 0.25rem;
  &.invalid input {
    border-bottom: 1px solid rgb(var(--red));
  }
}

input.label-text-input {
  background-color: rgba(var(--darkest), 0.3);
  border-bottom: 1px solid rgb(var(--white));
}

/* modal */

.modal-overlay {
  position: fixed;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  padding: 1.5rem;
  display: flex;
  justify-content: center;
  align-items: start;
  background-color: rgba(var(--darkest), 0.75);
  transition: opacity 0.5s ease;
}

.modal-content {
  position: relative;
  padding: 1rem;
  background-color: rgb(var(--darker));
  border: 1px solid rgb(var(--dark));
  width: calc(100% - 20px);
  max-width: 400px;
  margin-bottom: 3rem;
  h3, p {
    width: 100%;
  }
}

.modal-close {
  position: absolute;
  bottom: -3.5rem;
  left: 0;
  right: 0;
  justify-content: center;
  background-color: rgb(var(--darker));
}

.ReactModal__Overlay {
  opacity: 0;
  transition: opacity 250ms ease;
}

.ReactModal__Overlay--after-open{
  opacity: 1;
}

.ReactModal__Overlay--before-close{
  opacity: 0;
}

/* dropdown */

.dropdown-wrapper {
  position: relative;
  height: 100%;
  min-height: 3rem;
}

.dropdown-button {
  height: 100%;
}

.dropdown-menu {
  position: absolute;
  min-width: 100%;
  right: 0;
  top: 3.5rem;
  padding: 0.75rem;
  display: flex;
  flex-direction: column;
  gap: 0.125rem;
  background-color: rgb(var(--darker));
  border: 1px solid rgb(var(--dark));
  box-shadow: rgba(0, 0, 0, 0.5) 0px 5px 15px;
  z-index: 9;
}

.dropdown-menu-button {
  color: rgb(var(--white));
  border: none;
  padding: 0.5rem;
  display: flex;
  gap: 1rem;
  justify-content: space-between;
  &:hover {
    background-color: rgb(var(--dark));
    .dropdown-menu-svg {
      fill: rgb(var(--white))
    }
  }
}

.dropdown-menu-svg {
  width: 1rem;
  min-width: 1rem;
  fill: rgb(var(--dark));
}

/* main elements */

.header-bar {
  display: flex;
  flex-direction: row;
  gap: 1rem;
  h2 {
    flex-grow: 1;
    border-bottom: 1px solid rgb(var(--dark));
  }
}

.header-bar-button {
  min-height: 3rem;
  height: 100%;
  background-color: rgb(var(--darker));
}

/* channel list */

.channels {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 15px;
  overflow-y: auto;
}

.channel {
  text-decoration: none;
  padding: 1rem;
  display: flex;
  flex-direction: row;
  gap: 1rem;
  align-items: center;
  border: 1px solid rgb(var(--dark));
  background-color: rgb(var(--darker));
  svg {
    fill: rgb(var(--white));
  }
  .fire {
    fill: rgb(var(--dark));
    width: 2.5rem;
    min-width: 2.5rem;
  }
  &:hover {
    border-color: rgb(var(--white));
    .fire {
      fill: rgb(var(--white))
    }
  }
}